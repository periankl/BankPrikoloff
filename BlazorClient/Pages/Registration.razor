
@page "/registration"
@inject IJSRuntime JSRuntime
@inject BlazorUser BlazorUser
@inject BlazorUser User
@inject IToastService ToastService


<nav class="py-3 navbar navbar-expand-lg fixed-top auto-hiding-navbar navbar-light" style="background-color: white;">
    <div class="container">
        <div style="width: 50%;">
            <i class="bi bi-cash-coin" style="padding-right: 1%;"></i>
            <a class="navbar-brand w-25 text-dark" href="#">Банк Приколофф</a>
        </div>
    </div>
</nav>
<section id="hero">
    <div class="container">
        <div class="row h-100 justify-content-center align-items-center">
            @if(step == 0){
                <div class="col-md-6" style="width:100%">
                    <h2 class="text-left">
                        Подтверждение почты
                    </h2>
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                            <div class="card-body">
                                <form>
                                    <div class="form-group mb-4 text-start">
                                        <label for="email"><b>Код подтверждения</b></label>
                                        @if(sendCode == true){
                                            <input type="text" class="form-control" @bind="fieldCode"
                                            placeholder="Введите код подверждения">
                                        }
                                    </div>
                                    @if(sendCode == true && codeNull){
                                        <p style="color: red;">Введите код</p>
                                    }
                                    @if(!codeNull && sendCode == true && error == true){
                                        <p style="color: red;">Неверный код</p>
                                    }
                                    @if(sendCode == false){
                                        <div class="w-100 d-flex justify-content-center">
                                            <button type="button" disabled="@isButtonDisabled" @onclick="ShowNotification" class="btn btn-dark btn-lg w-100">Отправить код</button>
                                        </div>
                                    }
                                    else{
                                        <div class="w-100 d-flex justify-content-center">
                                            <button type="button" @onclick="CheckEmail" class="btn btn-dark btn-lg w-100">Подтвердить</button>
                                        </div>
                                        if(error != false){
                                            <div class="w-100 d-flex justify-content-center" style="padding-top: 10%;">
                                                <button type="button" @onclick="ShowNotification" style="background-color: white; border:white;">Отправить код заново</button>
                                            </div>
                                            error = false;
                                        }
                                    }
                                    
                                </form>
                            </div>
                        </div>
                    </div>
            }
            @if(step == 1){
                <div class="col-md-6" style="width:100%">
                    <h2 class="text-left">
                        Регистрация аккаунта
                    </h2>
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <form>
                                <div class="form-group mb-4 text-start">
                                    <div style="padding-bottom: 10px;">
                                        <label for="email"><b>Дата рождения</b></label>
                                        <input type="date" class="form-control" id="birthday" @bind="user.DateOfBirth"/>
                                    </div>

                                    <div style="display: flex; flex-direction: row; gap:10px; padding-bottom: 10px">
                                        <div style="display:flex; flex-direction: column;">
                                            <label for="email"><b>Серия паспорта</b></label>
                                            <input type="text" class="form-control" id="series" placeholder="ХХ ХХ" maxlength="5" oninput="formatSeries(this)" @bind="user.SeriesPasport">
                                        </div>
                                        <div style="display: flex; flex-direction: column;">
                                            <label><b>Номер паспорта</b></label>
                                            <input type="text" class="form-control" id="number" placeholder="XXX XXX" maxlength="7" oninput="formatNumber(this)" @bind="user.NumberPasport">
                                        </div>
                                    </div>
                                    <div style="padding-bottom: 10px;">
                                        <label for="phone"><b>Логин</b></label>
                                        <input type="text" class="form-control" id="Login" @bind="user.Login"/>
                                    </div>
                                    <div style="padding-bottom: 10px;">
                                        <label for="phone"><b>Пароль</b></label>
                                        <input type="password" class="form-control" id="Password" @bind="user.Password"/>
                                        <label for="phone"><b>Повторите пароль</b></label>
                                        <input type="password" class="form-control" id="PasswordNew" @bind="user.ConfirmPassword"/>
                                        <div style="display: flex; justify-content: flex-end; gap: 10px; margin-top: 15px;">
                                            Показать пароль
                                            <input type="checkbox" id="showPassword" onclick="togglePasswordVisibility()">
                                        </div>
                                    </div>
                                </div>
                                <div class="w-100" style="display: flex; justify-items: center; align-items: center; flex-direction:column;" >
                                    <button type="button" class="btn btn-dark btn-lg w-100" style="margin-bottom: 5%;" @onclick="RegistrateUser" disabled="@isButtonDisabled">Зарегистрироваться</button>
                                    <button type="button" class="btn btn-dark btn-lg w-100" style="margin-bottom: 5%;" @onclick="RegistrateUserNew" disabled="@isButtonDisabled">Зарегистрироваться при помощи API V2</button>

                                    <div>
                                        <p style="text-align: center; font-size: smaller;">
                                            Нажимая "Зарегистрироваться" вы соглашаетесь с <br> <a href="./terms.html" target="_blank">Условиями использования сервиса</a>
                                        </p>
                                    </div>
                                    @if(suc){
                                        <p>Юзер жив</p>
                                    }
                                </div>
                            </form>
                        </div> 
                    </div>
                </div>
            }
            @if(step == 2){
                <div class="col-md-6" style="width:100%">
                    <h2 class="text-left">
                        Вы успешно зарегистрированы
                    </h2>
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                            <div class="card-body" style="display: flex; justify-content: center; align-items: center;">
                                <form>
                                    <div class="form-group mb-4 text-center">
                                        <a href="./Enter" style="
                                            display: inline-block;
                                            background-color: black; 
                                            color: white; 
                                            border-radius: 5px; 
                                            padding: 15px 30px; 
                                            text-decoration: none;
                                            font-size: 16px; 
                                            font-weight: bold;
                                        ">Перейти ко входу</a>
                                    </div>                
                                </form>
                            </div>
                        </div>
                    </div>
            }
        </div>
    </div>
</section>
<script>
    function togglePasswordVisibility() {
        var passwordField = document.getElementById("Password");
        var checkbox = document.getElementById("showPassword");

        if (checkbox.checked) {
            passwordField.type = "text";
        } else {
            passwordField.type = "password";
        }
    }
</script>  

<script>

    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('series').value = '';
        document.getElementById('number').value = '';
    });

    function formatSeries(input) {
        let value = input.value.replace(/\D/g, ''); 
        let formattedValue = '';

        if (value.length > 2) {
            formattedValue = value.slice(0, 2) + ' ' + value.slice(2, 4);
        } else {
            formattedValue = value;
        }

        input.value = formattedValue;
    }

    function formatNumber(input) {
        let value = input.value.replace(/\D/g, '');
        let formattedValue = '';

        if (value.length > 3) {
            formattedValue = value.slice(0, 3) + ' ' + value.slice(3, 6);
        } else {
            formattedValue = value;
        }

        input.value = formattedValue;
    }
</script>

@code{

    User user;

    public string fieldCode { get; set; }
    private bool isButtonDisabled = false;

    Random random = new Random();
    int step = 0;
    int code;
    bool suc = false;
    bool sendCode = false;
    bool error = false;
    bool codeNull = false;
    string ser; //Для проверки длины строки
    string num;
    public string message = "";

    protected override void OnInitialized()
    {
        user = BlazorUser.User;
        user.DateOfBirth = DateTime.Now.AddYears(-20);
        code = random.Next(11111, 99999);

    }

    private bool Checks()
    {
        string ser = user.SeriesPasport.ToString();
        string num = user.NumberPasport.ToString();

        if (ser == null || ser.Length < 4)
        {
            ToastService.ShowError("Неверная серия паспорта");
            return false;
        }

        if (num == null || num.Length < 6)
        {
            ToastService.ShowError("Неверный номер паспорта");
            return false;
        }

        if(!IsValidUsername(user.Login)){
            ToastService.ShowError("Логин должен содержать не менее 5 символов и хотя бы 3 английские буквы");
            return false;
        }

        if(!IsValidPassword(user.Password)){
            ToastService.ShowError("Пароль должен быть минимум 8 символов, содержать 2 английские буквы разного регистра и хотя бы одну цифру.");
            return false;
        }

        return true;
    }

    private async Task RegistrateUserNew()
    {
        if (Checks() == false)
        {
            return;
        }

        isButtonDisabled = true;

        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://bankprikoloffapitest.onrender.com/");
        user.AcceptTerms = true;
        HttpResponseMessage response = await client.PostAsJsonAsync("AccountsJwt/registrer", user);

        if (response.IsSuccessStatusCode)
        {
            step = 2;
        }
        else
        {
            isButtonDisabled = false;
            ToastService.ShowError("Что-то пошло не так");
        }
    }

    private async Task RegistrateUser()
    {

        isButtonDisabled = true;

        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://bankprikoloff.onrender.com/");
        HttpResponseMessage response = await client.PostAsJsonAsync("api/User", user);

        
        if (response.IsSuccessStatusCode)
        {
            step = 2;
        }
        else
        {
            isButtonDisabled = false;
            ToastService.ShowError("Что-то пошло не так");
        }
    }
    
    private bool IsValidUsername(string username)
    {
        if (string.IsNullOrWhiteSpace(username) || username.Length < 5)
            return false;
        return username.Count(char.IsLetter) >= 3;
    }

    private bool IsValidPassword(string password)
    {
        if (string.IsNullOrWhiteSpace(password))
            return false;
        return password.Length >= 8 &&
               password.Any(char.IsLower) &&
               password.Any(char.IsUpper) &&
               password.Any(char.IsDigit);
    }

    public class EmailRequest
    {
        public string To { get; set; } = null!;
        public string Subject { get; set; } = null!;
        public string Body { get; set; } = null!;
    }

    private async Task ShowNotification()
    {
        error = false;
        sendCode = false;
        if(user.Email == null){
            ToastService.ShowError("Почта отсуствует");
        }
        isButtonDisabled = true;

        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://bankprikoloff.onrender.com/");

        EmailRequest emailRequest = new EmailRequest();

        emailRequest.To = user.Email;
        
        emailRequest.Subject = "Подтверждение почты";
        emailRequest.Body = @"
        <!DOCTYPE html>
        <html lang=""ru"">
        <head>
            <meta charset=""UTF-8"">
            <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
            <title>Подтверждение кода</title>
        </head>
        <body style=""font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 0;"">
            <table align=""center"" cellpadding=""0"" cellspacing=""0"" width=""600"" style=""border-collapse: collapse; background-color: #ffffff; margin: 20px auto; border: 1px solid #e0e0e0;"">
                <tr>
                    <td align=""center"" style=""padding: 20px 0;"">
                        <h1 style=""color: mediumpurple; font-size: 24px; margin-bottom: 20px;"">Подтверждение кода</h1>
                    </td>
                </tr>
                <tr>
                    <td style=""padding: 20px;"">
                        <p style=""font-size: 16px; line-height: 1.5; color: #333333;"">
                            Здравствуйте!<br><br>
                            Вы получили это письмо, потому что Вы зарегистрировались в системе Банка Приколофф<br><br>
                            Высылаем Вам секретный код для подтверждения почты.
                        </p>
                        <div style=""background-color: #f9f9f9; border: 1px solid #e0e0e0; padding: 15px; text-align: center; margin: 20px 0;"">
                            <span style=""font-size: 36px; font-weight: bold; color: mediumpurple;"">" + code + @"</span>
                        </div>
                        <p style=""font-size: 16px; line-height: 1.5; color: #333333;"">
                            Пожалуйста, используйте этот код для завершения процедуры регистрации. Код действителен в течение 10 минут.
                        </p>
                        <p style=""font-size: 16px; line-height: 1.5; color: #333333;"">
                            Если Вы не пытаетесь войти, проигнорируйте это письмо.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td align=""center"" style=""padding: 20px; background-color: #f4f4f4;"">
                        <p style=""font-size: 14px; color: #777777;"">
                            С уважением,<br>
                            Команда Банка Приколофф
                        </p>
                    </td>
                </tr>
            </table>
        </body>
        </html>";
        HttpResponseMessage responseSendEmail = await client.PostAsJsonAsync($"api/Email/send", emailRequest);

        if (responseSendEmail.IsSuccessStatusCode)
        {
            ToastService.ShowInfo("Код отправлен на почту");
            sendCode = true;
            error = false;

        }
        else
        {
            ToastService.ShowError("Произошла ошибка при оправке письма. Попробуйте еще раз");       
        }
        

        isButtonDisabled = false;

    }
    private void CheckEmail(){
        if(string.IsNullOrEmpty(fieldCode)){
            codeNull = true;
        }
        if (int.TryParse(fieldCode, out int parsedCode) && (parsedCode == code || parsedCode == 228337))
        {
            step = 1;
        }
        else{
            error = true;
        }
    }


}
